{"version":3,"sources":["components/NodeField.js","components/Node.js","components/Directory.js","components/MapPopup.js","components/Map.js","components/MurmurationsInterface.js","index.js"],"names":["NodeField","props","this","value","Object","Array","isArray","field","attribs","nodeData","join","labelElement","showLabel","labelValue","label","className","truncate","length","slice","link","href","React","Component","Node","node_content","settings","apiNodeFormat","dangerouslySetInnerHTML","__html","directoryDisplaySchema","hasOwnProperty","push","Directory","nodesPerPage","handlePageClick","data","setState","activePage","selected","pageNodes","getPageNodes","page","start","end","parseInt","console","log","nodes","state","map","node","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","pageClassName","activeClassName","MapPopup","image","src","url","alt","maxWidth","height","urls","target","rel","wordBreak","name","description","L","Icon","Default","prototype","_getIconUrl","Map","mergeOptions","iconRetinaUrl","clientPathToApp","iconUrl","shadowUrl","MapContainer","center","mapCenter","zoom","mapZoom","scrollWheelZoom","mapAllowScrollZoom","style","width","margin","TileLayer","attribution","id","geolocation","Marker","position","parseFloat","lat","lon","Popup","objectID","MurmurationsInterface","fetchNodes","bind","handleFilterSubmit","handleSearchSubmit","handleSearchChange","filterFormData","formData","filters","api_url","apiUrl","api_node_format","isLoaded","params","URLSearchParams","interfaceComp","set","search","fetch","toString","then","res","json","result","error","event","preventDefault","e","keys","forEach","key","index","filterSchema","properties","op","operator","interfaceComponent","schema","message","onChange","onError","action","onSubmit","type","reactDirectory","document","getElementById","reactMap","window","wpReactSettings","ReactDOM","render"],"mappings":"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","file":"static/js/main.0773a0d8.chunk.js","sourcesContent":["import React from 'react';\n\nclass NodeField extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n  render() {\n\n    if(!this.props.value){\n      return null;\n    }\n\n    if(this.props.value === Object(this.props.value) && !Array.isArray(this.props.value)){\n      return null;\n    }\n\n    var value = this.props.value;\n\n    const { field, attribs, nodeData } = this.props;\n\n    if(Array.isArray(value)){\n      value = value.join(\", \");\n    }\n\n    var labelElement = '';\n    if(attribs.showLabel == true){\n      var labelValue = attribs.label;\n      labelElement = <div className={\"node-field-label \"+field}>{labelValue}</div>\n    }else{\n      labelElement = '';\n    }\n\n    if(attribs.truncate){\n      if (value.length > attribs.truncate){\n        value = value.slice(0, attribs.truncate) + '...'\n      }\n    }\n\n    if(attribs.link){\n      value = <a href={nodeData[attribs.link]}>{value}</a>\n    }\n\n    return(\n      <div className={\"node-field \"+field}>\n        {labelElement}\n        <div className={\"node-field-value \"+field}>\n        {value}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NodeField\n","import React from 'react';\nimport NodeField from './NodeField.js';\n\nclass Node extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  render() {\n\n    var node_content = [];\n\n    if(this.props.settings.apiNodeFormat == 'HTML'){\n      node_content = <div dangerouslySetInnerHTML={{ __html: this.props.nodeData }} />\n    }else if(this.props.settings.directoryDisplaySchema){\n      for (var field in this.props.settings.directoryDisplaySchema) {\n        if (this.props.settings.directoryDisplaySchema.hasOwnProperty(field)) {\n          node_content.push(\n            <NodeField\n            field={field}\n            value={this.props.nodeData[field]}\n            attribs = {this.props.settings.directoryDisplaySchema[field]}\n            nodeData = {this.props.nodeData}\n            />\n          )\n\n        }\n      }\n    }\n\n    return(\n      <div className={\"directory-node\"}>\n      {node_content}\n      </div>\n    );\n  }\n}\n\nexport default Node\n","import React from 'react';\nimport ReactPaginate from 'react-paginate'\nimport Node from './Node.js';\n\nclass Directory extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePage : 0,\n      pageNodes: this.getPageNodes(0)\n    };\n  }\n\n  nodesPerPage = this.props.settings.nodesPerPage || 15\n\n  handlePageClick = data => {\n    this.setState({\n      activePage: data.selected,\n      pageNodes: this.getPageNodes(data.selected)\n    });\n  }\n\n  getPageNodes = page => {\n    const start = page*this.nodesPerPage;\n    const end = parseInt(start)+parseInt(this.nodesPerPage);\n    console.log(\"Start\",start,\"end\",end);\n    return this.props.nodes.slice(start,end);\n  }\n\n  render() {\n\n    const nodes = this.props.nodes;\n\n    const pageNodes = this.state.pageNodes;\n\n    return (\n      <div>\n        <div className=\"nodeList\">\n          <div className=\"node-count\">{nodes.length} results found</div>\n          {pageNodes.map((node) =>  <Node nodeData={node} settings={this.props.settings}/>)}\n        </div>\n        <div className=\"react-paginate\">\n          <ReactPaginate\n            previousLabel={'prev'}\n            nextLabel={'next'}\n            breakLabel={'...'}\n            breakClassName={'break-me'}\n            pageCount={nodes.length/this.nodesPerPage}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={this.nodesPerPage}\n            onPageChange={this.handlePageClick}\n            containerClassName={'pagination'}\n            subContainerClassName={'pages pagination'}\n            pageClassName={'page-link-li'}\n            activeClassName={'active'}\n          />\n        </div>\n      </div>\n    );\n\n  }\n}\n\nexport default Directory\n","const MapPopup = ({node}) => {\n  return (\n  <div>\n    {node.image &&\n      <img\n        src={node.image[0].url}\n        alt=\"Node logo\"\n        maxWidth={\"50%\"}\n        height={8}\n      />\n    }\n    <div>\n        {\n          node.url || node.urls ?\n            <a href={node.url || node.urls[0].url}  target=\"_blank\" rel=\"noopener noreferrer\">\n              <span wordBreak=\"break-all\">{node.name}</span>\n            </a>\n              :\n            <span wordBreak=\"break-all\">{node.name}</span>\n        }\n    </div>\n    {node.description &&\n      <div>\n          {node.description.length > 250 ? `${node.description.slice(0,250)}...`: node.description}\n      </div>\n    }\n  </div>\n  )\n}\n\nexport default MapPopup\n","import { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet'\nimport L from 'leaflet';\nimport MapPopup from './MapPopup.js'\n\nimport 'leaflet/dist/leaflet.css'\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nconst Map = ({nodes, settings}) => {\n\n  L.Icon.Default.mergeOptions({\n    iconRetinaUrl: settings.clientPathToApp+'public/images/marker-icon-2x.png',\n    iconUrl: settings.clientPathToApp+'public/images/marker-icon.png',\n    shadowUrl: settings.clientPathToApp+'public/images/marker-shadow.png'\n  });\n\n  return (\n    <MapContainer center={settings.mapCenter} zoom={settings.mapZoom} scrollWheelZoom={settings.mapAllowScrollZoom} style={{height: \"70vh\", width: \"100%\", margin: \"auto\"}}>\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {nodes.map((node) => {\n        if (node.data) {\n          const id = node.id;\n          node = node.data;\n          node.id = id;\n        }\n        return(\n          <div key={`${node.id || node.objectID}`}>\n            {node.geolocation ?\n            (<Marker position={[parseFloat(node.geolocation.lat), parseFloat(node.geolocation.lon)]}>\n            <Popup>\n              <MapPopup node={node} />\n            </Popup>\n          </Marker>):\n          null}\n\n          </div>\n          )\n      })}\n    </MapContainer>\n  )\n}\n\nexport default Map\n","import React from 'react';\nimport Form from \"@rjsf/core\";\nimport Directory from './Directory.js';\nimport Map from './Map.js';\n\nclass MurmurationsInterface extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.fetchNodes = this.fetchNodes.bind(this);\n    this.handleFilterSubmit = this.handleFilterSubmit.bind(this);\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.state = {\n      nodes: [],\n      filterFormData : props.settings.formData\n    };\n\n  }\n\n  fetchNodes(filters){\n    var api_url = this.props.settings.apiUrl;\n    var api_node_format = this.props.settings.apiNodeFormat;\n\n    this.setState({isLoaded : false});\n\n    var params = new URLSearchParams(filters);\n\n    if( this.props.interfaceComp == 'directory' ){\n      params.set('format', api_node_format);\n    }\n\n    if(this.state.search){\n      params.set('search', this.state.search);\n    }\n\n    fetch(api_url+'?'+params.toString())\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            nodes: result\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n\n\n  }\n\n  handleSearchChange(event) {\n    this.setState({search : event.target.value});\n  }\n\n  handleSearchSubmit(event) {\n    event.preventDefault();\n    this.fetchNodes();\n  }\n\n  handleFilterSubmit({formData}, e) {\n\n    var filters = \"\";\n\n    this.setState({filterFormData : formData});\n\n    Object.keys(formData).forEach((key,index) => {\n      if(formData[key]){\n        if (formData[key] != \"any\" && formData[key] != \"\"){\n          if('operator' in this.props.settings.filterSchema.properties[key]){\n            var op = this.props.settings.filterSchema.properties[key].operator;\n          }else{\n            var op = 'equals';\n          }\n          filters += \"filters[\"+index+\"][0]=\"+key+'&';\n          filters += \"filters[\"+index+\"][1]=\"+op+\"&\";\n          filters += \"filters[\"+index+\"][2]=\"+formData[key]+\"&\";\n        }\n      }\n    });\n\n    this.fetchNodes(filters);\n\n  }\n\n  componentDidMount() {\n\n    this.fetchNodes();\n\n  }\n\n  render() {\n\n    const schema = this.props.settings.filterSchema;\n\n    const { error, isLoaded, nodes } = this.state;\n\n    var interfaceComponent;\n\n    if (error) {\n      interfaceComponent = <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      interfaceComponent = <div>Loading...</div>;\n    } else {\n      if (this.props.interfaceComp == 'directory' ){\n        interfaceComponent = <Directory nodes={nodes} settings={this.props.settings} />\n      } else if (this.props.interfaceComp == 'map' ){\n        interfaceComponent = <Map nodes={nodes} settings={this.props.settings} />\n      }\n    }\n\n      return (\n        <div>\n          <div className=\"mri-filter-form\">\n            <Form schema={schema}\n            formData={this.state.filterFormData}\n            onChange={this.handleFilterSubmit}\n            onError={console.log(\"errors\", this)} />\n          </div>\n          <div className=\"mri-search-form\">\n            <form action=\"/\" onSubmit={this.handleSearchSubmit} >\n              <input type=\"text\" name=\"search\"  onChange={this.handleSearchChange} value={this.state.search} />\n              <button type=\"submit\">Search</button>\n            </form>\n          </div>\n          {interfaceComponent}\n        </div>\n      );\n\n  }\n}\n\nexport default MurmurationsInterface\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MurmurationsInterface from './components/MurmurationsInterface.js';\n\nconst reactDirectory = document.getElementById('murmurations-react-directory');\n\nconst reactMap = document.getElementById('murmurations-react-map');\n\nif (reactDirectory) {\n  const settings = window.wpReactSettings;\n  ReactDOM.render(<MurmurationsInterface settings={settings} interfaceComp=\"directory\"/>, reactDirectory);\n}\n\nif (reactMap) {\n  const settings = window.wpReactSettings;\n  ReactDOM.render(<MurmurationsInterface settings={settings} interfaceComp=\"map\" />, reactMap);\n}\n"],"sourceRoot":""}