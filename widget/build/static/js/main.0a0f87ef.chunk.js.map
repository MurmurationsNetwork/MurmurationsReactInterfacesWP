{"version":3,"sources":["components/NodeField.js","components/Node.js","components/Directory.js","components/MapPopup.js","components/Map.js","components/MurmurationsInterface.js","index.js"],"names":["NodeField","props","value","Object","Array","isArray","field","attribs","nodeData","join","labelElement","showLabel","labelValue","label","className","truncate","length","slice","link","href","Node","node_content","settings","apiNodeFormat","dangerouslySetInnerHTML","__html","directoryDisplaySchema","hasOwnProperty","push","Directory","loadingDiv","useState","activePage","setActivePage","pageNodes","setPageNodes","nodesPerPage","parseInt","nodes","useEffect","start","end","loaded","class","src","clientPathToApp","map","node","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","data","selected","containerClassName","subContainerClassName","pageClassName","activeClassName","MapPopup","image","url","alt","maxWidth","height","urls","target","rel","wordBreak","name","description","L","Icon","Default","prototype","_getIconUrl","Map","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapContainer","center","mapCenter","zoom","mapZoom","scrollWheelZoom","mapAllowScrollZoom","style","width","margin","TileLayer","attribution","id","geolocation","Marker","position","parseFloat","lat","lon","Popup","objectID","MurmurationsInterface","interfaceComp","isLoaded","setIsLoaded","error","setError","setNodes","search","setSearch","formData","filterFormData","setFilterFormData","fetchNodes","interfaceComponent","filters","api_url","apiUrl","api_node_format","params","URLSearchParams","set","fetch","toString","then","res","json","result","schema","filterSchema","message","showFilters","onChange","e","keys","forEach","key","index","properties","op","operator","onError","console","log","action","onSubmit","event","preventDefault","type","reactDirectory","document","getElementById","reactMap","window","wpReactSettings","ReactDOM","render"],"mappings":"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","file":"static/js/main.0a0f87ef.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NodeField(props){\n\n  if(!props.value){\n    return null;\n  }\n\n  if(props.value === Object(props.value) && !Array.isArray(props.value)){\n    return null;\n  }\n\n  var value = props.value;\n\n  const { field, attribs, nodeData } = props;\n\n  if(Array.isArray(value)){\n    value = value.join(\", \");\n  }\n\n  var labelElement = '';\n  if(attribs.showLabel == true){\n    var labelValue = attribs.label;\n    labelElement = <div className={\"node-field-label \"+field}>{labelValue}</div>\n  }else{\n    labelElement = '';\n  }\n\n  if(attribs.truncate){\n    if (value.length > attribs.truncate){\n      value = value.slice(0, attribs.truncate) + '...'\n    }\n  }\n\n  if(attribs.link){\n    value = <a href={nodeData[attribs.link]}>{value}</a>\n  }\n\n  return(\n    <div className={\"node-field \"+field}>\n      {labelElement}\n      <div className={\"node-field-value \"+field}>\n      {value}\n      </div>\n    </div>\n  );\n\n}\n\nexport default NodeField\n","import React from 'react';\nimport NodeField from './NodeField.js';\n\nfunction Node(props){\n\n    var node_content = [];\n\n    if(props.settings.apiNodeFormat == 'HTML'){\n      node_content = <div dangerouslySetInnerHTML={{ __html: props.nodeData }} />\n    }else if(props.settings.directoryDisplaySchema){\n      for (var field in props.settings.directoryDisplaySchema) {\n        if (props.settings.directoryDisplaySchema.hasOwnProperty(field)) {\n          node_content.push(\n            <NodeField\n            field={field}\n            value={props.nodeData[field]}\n            attribs = {props.settings.directoryDisplaySchema[field]}\n            nodeData = {props.nodeData}\n            />\n          )\n\n        }\n      }\n    }\n\n    return(\n      <div className={\"directory-node\"}>\n      {node_content}\n      </div>\n    );\n\n}\n\nexport default Node\n","import { useState, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate'\nimport Node from './Node.js';\n\nfunction Directory(props){\n\n  const [activePage, setActivePage] = useState(0);\n  const [pageNodes, setPageNodes] = useState(null);\n\n  const nodesPerPage = parseInt(props.settings.nodesPerPage) || 15\n\n  const nodes = props.nodes;\n\n  useEffect(() => {\n    const start = parseInt(activePage)*nodesPerPage;\n    const end = parseInt(start)+ nodesPerPage;\n    setPageNodes(nodes.slice(start,end));\n  }, [activePage, nodes]);\n\n  const handlePageClick = data => {\n    setActivePage(data.selected);\n  }\n\n  var loadingDiv;\n\n  if(!props.loaded){\n    loadingDiv = <div class=\"mri-directory-loading\"><img src={props.settings.clientPathToApp + \"public/images/spinner.gif\"} /></div>\n  }\n\n  return (\n\n    <div>\n    {props.loaded ?\n      <div className=\"nodeList\">\n        <div className=\"node-count\">{nodes.length} results found</div>\n        {pageNodes.map((node) =>  <Node nodeData={node} settings={props.settings}/>)}\n      </div> : loadingDiv }\n\n     <div className=\"react-paginate\">\n        <ReactPaginate\n          previousLabel={'prev'}\n          nextLabel={'next'}\n          breakLabel={'...'}\n          breakClassName={'break-me'}\n          pageCount={nodes.length/nodesPerPage}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={nodesPerPage}\n          onPageChange={handlePageClick}\n          containerClassName={'pagination'}\n          subContainerClassName={'pages pagination'}\n          pageClassName={'page-link-li'}\n          activeClassName={'active'}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Directory\n","const MapPopup = ({node}) => {\n  return (\n  <div>\n    {node.image &&\n      <img\n        src={node.image[0].url}\n        alt=\"Node logo\"\n        maxWidth={\"50%\"}\n        height={8}\n      />\n    }\n    <div>\n        {\n          node.url || node.urls ?\n            <a href={node.url || node.urls[0].url}  target=\"_blank\" rel=\"noopener noreferrer\">\n              <span wordBreak=\"break-all\">{node.name}</span>\n            </a>\n              :\n            <span wordBreak=\"break-all\">{node.name}</span>\n        }\n    </div>\n    {node.description &&\n      <div>\n          {node.description.length > 250 ? `${node.description.slice(0,250)}...`: node.description}\n      </div>\n    }\n  </div>\n  )\n}\n\nexport default MapPopup\n","import { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet'\nimport L from 'leaflet';\nimport MapPopup from './MapPopup.js'\n\nimport 'leaflet/dist/leaflet.css'\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nconst Map = ({nodes, settings, loaded}) => {\n\n  L.Icon.Default.mergeOptions({\n    iconRetinaUrl: settings.clientPathToApp+'public/images/marker-icon-2x.png',\n    iconUrl: settings.clientPathToApp+'public/images/marker-icon.png',\n    shadowUrl: settings.clientPathToApp+'public/images/marker-shadow.png'\n  });\n\n  var loadingDiv;\n\n  if(!loaded){\n    loadingDiv = <div class=\"mri-map-loading\"><img src={settings.clientPathToApp + \"public/images/spinner.gif\"} /></div>\n  }\n\n  return (\n    <div class=\"mri-map-outer-container\">\n    {loadingDiv}\n    <MapContainer center={settings.mapCenter} zoom={settings.mapZoom} scrollWheelZoom={settings.mapAllowScrollZoom} style={{height: \"70vh\", width: \"100%\", margin: \"auto\"}}>\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {nodes.map((node) => {\n        if (node.data) {\n          const id = node.id;\n          node = node.data;\n          node.id = id;\n        }\n        return(\n          <div key={`${node.id || node.objectID}`}>\n            {node.geolocation ?\n            (<Marker position={[parseFloat(node.geolocation.lat), parseFloat(node.geolocation.lon)]}>\n            <Popup>\n              <MapPopup node={node} />\n            </Popup>\n          </Marker>):\n          null}\n\n          </div>\n          )\n      })}\n    </MapContainer>\n    </div>\n  )\n}\n\nexport default Map\n","import { useState, useEffect } from 'react';\nimport Form from \"@rjsf/core\";\nimport Directory from './Directory.js';\nimport Map from './Map.js';\n\nfunction MurmurationsInterface({settings, interfaceComp}){\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const [nodes, setNodes] = useState([]);\n  const [search, setSearch] = useState(null);\n  const [filterFormData, setFilterFormData] = useState(settings.formData);\n\n  useEffect(() => {\n    fetchNodes()\n  }, []);\n\n  const fetchNodes = (filters) => {\n    var api_url = settings.apiUrl;\n    var api_node_format = settings.apiNodeFormat;\n\n    setIsLoaded(false);\n    setNodes([]);\n\n    var params = new URLSearchParams(filters);\n\n    if( interfaceComp == 'directory' ){\n      params.set('format', api_node_format);\n    }\n\n    if(search){\n      params.set('search', search);\n    }\n\n    fetch(api_url+'?'+params.toString())\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setNodes(result);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n\n\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const handleSearchSubmit = (event) => {\n    event.preventDefault();\n    fetchNodes();\n  }\n\n  const handleErrors = () => {\n    console.log(\"errors\", this)\n  }\n\n  const handleFilterSubmit = ({formData}, e) => {\n\n    var filters = \"\";\n\n    setFilterFormData(formData);\n\n\n    Object.keys(formData).forEach((key,index) => {\n      if(formData[key]){\n        if (formData[key] != \"any\" && formData[key] != \"\"){\n          if('operator' in settings.filterSchema.properties[key]){\n            var op = settings.filterSchema.properties[key].operator;\n          }else{\n            var op = 'equals';\n          }\n          filters += \"filters[\"+index+\"][0]=\"+key+'&';\n          filters += \"filters[\"+index+\"][1]=\"+op+\"&\";\n          filters += \"filters[\"+index+\"][2]=\"+formData[key]+\"&\";\n        }\n      }\n    });\n\n    fetchNodes(filters);\n\n  }\n\n  const schema = settings.filterSchema;\n\n  var interfaceComponent;\n\n  if (error) {\n    interfaceComponent = <div>Error: {error.message}</div>;\n  } else {\n    if (interfaceComp == 'directory' ){\n      interfaceComponent = <Directory nodes={nodes} settings={settings} loaded={isLoaded} />\n    } else if (interfaceComp == 'map' ){\n      interfaceComponent = <Map nodes={nodes} settings={settings} loaded={isLoaded} />\n    }\n  }\n\n  return (\n    <div>\n      {settings.showFilters ?\n      <div className=\"mri-filter-form\">\n        <Form schema={schema}\n        formData={filterFormData}\n        onChange={handleFilterSubmit}\n        onError={handleErrors} />\n      </div>\n      : null }\n      <div className=\"mri-search-form\">\n        <form action=\"/\" onSubmit={handleSearchSubmit} >\n          <input type=\"text\" name=\"search\"  onChange={handleSearchChange} value={search} />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n      {interfaceComponent}\n    </div>\n  );\n}\n\nexport default MurmurationsInterface\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MurmurationsInterface from './components/MurmurationsInterface.js';\n\nconst reactDirectory = document.getElementById('murmurations-react-directory');\n\nconst reactMap = document.getElementById('murmurations-react-map');\n\nif (reactDirectory) {\n  const settings = window.wpReactSettings;\n  ReactDOM.render(<MurmurationsInterface settings={settings} interfaceComp=\"directory\"/>, reactDirectory);\n}\n\nif (reactMap) {\n  const settings = window.wpReactSettings;\n  ReactDOM.render(<MurmurationsInterface settings={settings} interfaceComp=\"map\" />, reactMap);\n}\n"],"sourceRoot":""}