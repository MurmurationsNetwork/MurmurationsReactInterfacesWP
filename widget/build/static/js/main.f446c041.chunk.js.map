{"version":3,"sources":["components/NodeField.js","components/Node.js","components/Directory.js","components/MapPopup.js","components/Map.js","components/MurmurationsInterface.js","index.js"],"names":["NodeField","props","value","this","Object","Array","isArray","field","attribs","nodeData","join","labelElement","showLabel","labelValue","label","className","truncate","length","slice","link","href","Node","node_content","settings","apiNodeFormat","dangerouslySetInnerHTML","__html","directoryDisplaySchema","hasOwnProperty","push","Directory","console","log","loadingDiv","useState","activePage","setActivePage","pageNodes","setPageNodes","nodesPerPage","parseInt","nodes","useEffect","start","end","loaded","class","src","clientPathToApp","map","node","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","data","selected","containerClassName","subContainerClassName","pageClassName","activeClassName","MapPopup","image","url","alt","maxWidth","height","urls","target","rel","wordBreak","name","description","L","Icon","Default","prototype","_getIconUrl","Map","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapContainer","center","mapCenter","zoom","mapZoom","scrollWheelZoom","mapAllowScrollZoom","style","width","margin","TileLayer","attribution","id","geolocation","Marker","position","parseFloat","lat","lon","Popup","objectID","MurmurationsInterface","fetchNodes","bind","handleFilterSubmit","handleSearchSubmit","handleSearchChange","handleErrors","state","filterFormData","formData","filters","api_url","apiUrl","api_node_format","setState","isLoaded","params","URLSearchParams","interfaceComp","set","search","fetch","toString","then","res","json","result","error","event","preventDefault","e","keys","forEach","key","index","filterSchema","properties","op","operator","interfaceComponent","schema","message","onChange","onError","action","onSubmit","type","React","Component","reactDirectory","document","getElementById","reactMap","window","wpReactSettings","ReactDOM","render"],"mappings":"mQAiDeA,MA/Cf,SAAmBC,GAEjB,IAAIA,EAAMC,MACR,OAAO,KAGT,GAAGC,KAAKF,MAAMC,QAAUE,OAAOH,EAAMC,SAAWG,MAAMC,QAAQL,EAAMC,OAClE,OAAO,KAGT,IAAIA,EAAQD,EAAMC,MAEVK,EAA6BN,EAA7BM,MAAOC,EAAsBP,EAAtBO,QAASC,EAAaR,EAAbQ,SAErBJ,MAAMC,QAAQJ,KACfA,EAAQA,EAAMQ,KAAK,OAGrB,IAAIC,EAAe,GACnB,GAAwB,GAArBH,EAAQI,UAAkB,CAC3B,IAAIC,EAAaL,EAAQM,MACzBH,EAAe,qBAAKI,UAAW,oBAAoBR,EAApC,SAA4CM,SAE3DF,EAAe,GAajB,OAVGH,EAAQQ,UACLd,EAAMe,OAAST,EAAQQ,WACzBd,EAAQA,EAAMgB,MAAM,EAAGV,EAAQQ,UAAY,OAI5CR,EAAQW,OACTjB,EAAQ,mBAAGkB,KAAMX,EAASD,EAAQW,MAA1B,SAAkCjB,KAI1C,sBAAKa,UAAW,cAAcR,EAA9B,UACGI,EACD,qBAAKI,UAAW,oBAAoBR,EAApC,SACCL,QCTQmB,MA9Bf,SAAcpB,GAEV,IAAIqB,EAAe,GAEnB,GAAmC,QAAhCrB,EAAMsB,SAASC,cAChBF,EAAe,qBAAKG,wBAAyB,CAAEC,OAAQzB,EAAMQ,iBACzD,GAAGR,EAAMsB,SAASI,uBACtB,IAAK,IAAIpB,KAASN,EAAMsB,SAASI,uBAC3B1B,EAAMsB,SAASI,uBAAuBC,eAAerB,IACvDe,EAAaO,KACX,cAAC,EAAD,CACAtB,MAAOA,EACPL,MAAOD,EAAMQ,SAASF,GACtBC,QAAWP,EAAMsB,SAASI,uBAAuBpB,GACjDE,SAAYR,EAAMQ,YAQ1B,OACE,qBAAKM,UAAW,iBAAhB,SACCO,KCyDQQ,MA/Ef,SAAmB7B,GAEjB8B,QAAQC,IAAI,yBAEZ,IAiCIC,EAjCJ,EAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAeC,SAASvC,EAAMsB,SAASgB,eAAiB,GAExDE,EAAQxC,EAAMwC,MAyCpB,OAtCAC,qBAAU,WACR,IAAMC,EAAQH,SAASL,GAAYI,EAC7BK,EAAMJ,SAASG,GAAQJ,EAC7BD,EAAaG,EAAMvB,MAAMyB,EAAMC,IAC/Bb,QAAQC,IAAI,2BACZD,QAAQC,IAAIG,GACZJ,QAAQC,IAAIW,GACZZ,QAAQC,IAAIY,GACZb,QAAQC,IAAIO,GACZR,QAAQC,IAAIS,GACZV,QAAQC,IAAIK,KACX,CAACF,EAAYM,IAgBZxC,EAAM4C,SACRZ,EAAa,qBAAKa,MAAM,wBAAX,SAAmC,qBAAKC,IAAK9C,EAAMsB,SAASyB,gBAAkB,iCAG7FjB,QAAQC,IAAI,iBACZD,QAAQC,IAAIG,GACZJ,QAAQC,IAAIO,GACZR,QAAQC,IAAIS,GACZV,QAAQC,IAAIK,GAKV,gCAAME,EACLtC,EAAM4C,OACL,sBAAK9B,UAAU,WAAf,UACE,sBAAKA,UAAU,aAAf,UAA6B0B,EAAMxB,OAAnC,oBACCoB,EAAUY,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,CAAMzC,SAAUyC,EAAM3B,SAAUtB,EAAMsB,iBACzDU,EAEV,qBAAKlB,UAAU,iBAAf,SACG,cAAC,IAAD,CACEoC,cAAe,OACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBC,UAAWd,EAAMxB,OAAOsB,EACxBiB,qBAAsB,EACtBC,mBAAoBlB,EACpBmB,aA3CgB,SAAAC,GACtBvB,EAAcuB,EAAKC,WA2CbC,mBAAoB,aACpBC,sBAAuB,mBACvBC,cAAe,eACfC,gBAAiB,iB,qDC/CZC,EA9BE,SAAC,GAAY,IAAXf,EAAU,EAAVA,KACjB,OACA,gCACGA,EAAKgB,OACJ,qBACEnB,IAAKG,EAAKgB,MAAM,GAAGC,IACnBC,IAAI,YACJC,SAAU,MACVC,OAAQ,IAGZ,8BAEMpB,EAAKiB,KAAOjB,EAAKqB,KACf,mBAAGnD,KAAM8B,EAAKiB,KAAOjB,EAAKqB,KAAK,GAAGJ,IAAMK,OAAO,SAASC,IAAI,sBAA5D,SACE,sBAAMC,UAAU,YAAhB,SAA6BxB,EAAKyB,SAGpC,sBAAMD,UAAU,YAAhB,SAA6BxB,EAAKyB,SAGzCzB,EAAK0B,aACJ,8BACK1B,EAAK0B,YAAY3D,OAAS,IAA1B,UAAmCiC,EAAK0B,YAAY1D,MAAM,EAAE,KAA5D,OAAuEgC,EAAK0B,kB,cCjBhFC,IAAEC,KAAKC,QAAQC,UAAUC,YAEhC,IA8CeC,EA9CH,SAAC,GAA+B,IAQtCjD,EARQQ,EAA6B,EAA7BA,MAAOlB,EAAsB,EAAtBA,SAAUsB,EAAY,EAAZA,OAc7B,OAZAgC,IAAEC,KAAKC,QAAQI,aAAa,CAC1BC,cAAe7D,EAASyB,gBAAgB,mCACxCqC,QAAS9D,EAASyB,gBAAgB,gCAClCsC,UAAW/D,EAASyB,gBAAgB,oCAKlCH,IACFZ,EAAa,qBAAKa,MAAM,kBAAX,SAA6B,qBAAKC,IAAKxB,EAASyB,gBAAkB,iCAI/E,sBAAKF,MAAM,0BAAX,UACCb,EACD,eAACsD,EAAA,EAAD,CAAcC,OAAQjE,EAASkE,UAAWC,KAAMnE,EAASoE,QAASC,gBAAiBrE,EAASsE,mBAAoBC,MAAO,CAACxB,OAAQ,OAAQyB,MAAO,OAAQC,OAAQ,QAA/J,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZ/B,IAAI,uDAEL1B,EAAMQ,KAAI,SAACC,GACV,GAAIA,EAAKS,KAAM,CACb,IAAMwC,EAAKjD,EAAKiD,IAChBjD,EAAOA,EAAKS,MACPwC,GAAKA,EAEZ,OACE,8BACGjD,EAAKkD,YACL,cAACC,EAAA,EAAD,CAAQC,SAAU,CAACC,WAAWrD,EAAKkD,YAAYI,KAAMD,WAAWrD,EAAKkD,YAAYK,MAAjF,SACD,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAUxD,KAAMA,QAGpB,MAPA,UAAaA,EAAKiD,IAAMjD,EAAKyD,qBCuGxBC,E,kDArIb,WAAY3G,GAAQ,IAAD,8BACjB,cAAMA,IACD4G,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAC1B,EAAKG,mBAAqB,EAAKA,mBAAmBH,KAAxB,gBAC1B,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,gBACpB,EAAKK,MAAQ,CACX1E,MAAO,GACP2E,eAAiBnH,EAAMsB,SAAS8F,UATjB,E,8CAcnB,SAAWC,GAAS,IAAD,OACbC,EAAUpH,KAAKF,MAAMsB,SAASiG,OAC9BC,EAAkBtH,KAAKF,MAAMsB,SAASC,cAE1CrB,KAAKuH,SAAS,CAACC,UAAW,EAAOlF,MAAO,KAExC,IAAImF,EAAS,IAAIC,gBAAgBP,GAED,aAA5BnH,KAAKF,MAAM6H,eACbF,EAAOG,IAAI,SAAUN,GAGpBtH,KAAKgH,MAAMa,QACZJ,EAAOG,IAAI,SAAU5H,KAAKgH,MAAMa,QAGlCC,MAAMV,EAAQ,IAAIK,EAAOM,YACtBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKZ,SAAS,CACZC,UAAU,EACVlF,MAAO6F,OAGX,SAACC,GACC,EAAKb,SAAS,CACZC,UAAU,EACVY,e,gCAQV,SAAmBC,GACjBrI,KAAKuH,SAAS,CAACM,OAASQ,EAAMhE,OAAOtE,U,gCAGvC,SAAmBsI,GACjBA,EAAMC,iBACNtI,KAAK0G,e,0BAGP,WACE9E,QAAQC,IAAI,SAAU7B,Q,gCAGxB,WAA+BuI,GAAI,IAAD,OAAdrB,EAAc,EAAdA,SAEdC,EAAU,GAEdnH,KAAKuH,SAAS,CAACN,eAAiBC,IAEhCjH,OAAOuI,KAAKtB,GAAUuB,SAAQ,SAACC,EAAIC,GACjC,GAAGzB,EAASwB,IACW,OAAjBxB,EAASwB,IAAkC,IAAjBxB,EAASwB,GAAW,CAChD,GAAG,aAAc,EAAK5I,MAAMsB,SAASwH,aAAaC,WAAWH,GAC3D,IAAII,EAAK,EAAKhJ,MAAMsB,SAASwH,aAAaC,WAAWH,GAAKK,cAEtDD,EAAK,SAEX3B,GAAW,WAAWwB,EAAM,QAAQD,EAAI,IACxCvB,GAAW,WAAWwB,EAAM,QAAQG,EAAG,IACvC3B,GAAW,WAAWwB,EAAM,QAAQzB,EAASwB,GAAK,QAKxD1I,KAAK0G,WAAWS,K,+BAIlB,WAEEnH,KAAK0G,e,oBAIP,WAEE,IAIIsC,EAJEC,EAASjJ,KAAKF,MAAMsB,SAASwH,aAEnC,EAAmC5I,KAAKgH,MAAhCoB,EAAR,EAAQA,MAAOZ,EAAf,EAAeA,SAAUlF,EAAzB,EAAyBA,MAcvB,OAVE8F,EACFY,EAAqB,0CAAaZ,EAAMc,WAER,aAA5BlJ,KAAKF,MAAM6H,cACbqB,EAAqB,cAAC,EAAD,CAAW1G,MAAOA,EAAOlB,SAAUpB,KAAKF,MAAMsB,SAAUsB,OAAQ8E,IAChD,OAA5BxH,KAAKF,MAAM6H,gBACpBqB,EAAqB,cAAC,EAAD,CAAK1G,MAAOA,EAAOlB,SAAUpB,KAAKF,MAAMsB,SAAUsB,OAAQ8E,KAK/E,gCACE,qBAAK5G,UAAU,kBAAf,SACE,cAAC,IAAD,CAAMqI,OAAQA,EACd/B,SAAUlH,KAAKgH,MAAMC,eACrBkC,SAAUnJ,KAAK4G,mBACfwC,QAASpJ,KAAK+G,iBAEhB,qBAAKnG,UAAU,kBAAf,SACE,uBAAMyI,OAAO,IAAIC,SAAUtJ,KAAK6G,mBAAhC,UACE,uBAAO0C,KAAK,OAAO/E,KAAK,SAAU2E,SAAUnJ,KAAK8G,mBAAoB/G,MAAOC,KAAKgH,MAAMa,SACvF,wBAAQ0B,KAAK,SAAb,yBAGHP,S,GAhIyBQ,IAAMC,WCApCC,EAAiBC,SAASC,eAAe,gCAEzCC,EAAWF,SAASC,eAAe,0BAEzC,GAAIF,EAAgB,CAClB,IAAMtI,EAAW0I,OAAOC,gBACxBC,IAASC,OAAO,cAAC,EAAD,CAAuB7I,SAAUA,EAAUuG,cAAc,cAAe+B,GAG1F,GAAIG,EAAU,CACZ,IAAMzI,EAAW0I,OAAOC,gBACxBC,IAASC,OAAO,cAAC,EAAD,CAAuB7I,SAAUA,EAAUuG,cAAc,QAAUkC,M","file":"static/js/main.f446c041.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NodeField(props){\n\n  if(!props.value){\n    return null;\n  }\n\n  if(this.props.value === Object(props.value) && !Array.isArray(props.value)){\n    return null;\n  }\n\n  var value = props.value;\n\n  const { field, attribs, nodeData } = props;\n\n  if(Array.isArray(value)){\n    value = value.join(\", \");\n  }\n\n  var labelElement = '';\n  if(attribs.showLabel == true){\n    var labelValue = attribs.label;\n    labelElement = <div className={\"node-field-label \"+field}>{labelValue}</div>\n  }else{\n    labelElement = '';\n  }\n\n  if(attribs.truncate){\n    if (value.length > attribs.truncate){\n      value = value.slice(0, attribs.truncate) + '...'\n    }\n  }\n\n  if(attribs.link){\n    value = <a href={nodeData[attribs.link]}>{value}</a>\n  }\n\n  return(\n    <div className={\"node-field \"+field}>\n      {labelElement}\n      <div className={\"node-field-value \"+field}>\n      {value}\n      </div>\n    </div>\n  );\n\n}\n\nexport default NodeField\n","import React from 'react';\nimport NodeField from './NodeField.js';\n\nfunction Node(props){\n\n    var node_content = [];\n\n    if(props.settings.apiNodeFormat == 'HTML'){\n      node_content = <div dangerouslySetInnerHTML={{ __html: props.nodeData }} />\n    }else if(props.settings.directoryDisplaySchema){\n      for (var field in props.settings.directoryDisplaySchema) {\n        if (props.settings.directoryDisplaySchema.hasOwnProperty(field)) {\n          node_content.push(\n            <NodeField\n            field={field}\n            value={props.nodeData[field]}\n            attribs = {props.settings.directoryDisplaySchema[field]}\n            nodeData = {props.nodeData}\n            />\n          )\n\n        }\n      }\n    }\n\n    return(\n      <div className={\"directory-node\"}>\n      {node_content}\n      </div>\n    );\n\n}\n\nexport default Node\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate'\nimport Node from './Node.js';\n\nfunction Directory(props){\n\n  console.log(\"Beginning of function\");\n\n  const [activePage, setActivePage] = useState(0);\n  const [pageNodes, setPageNodes] = useState(null);\n\n  const nodesPerPage = parseInt(props.settings.nodesPerPage) || 15\n\n  const nodes = props.nodes;\n\n\n  useEffect(() => {\n    const start = parseInt(activePage)*nodesPerPage;\n    const end = parseInt(start)+ nodesPerPage;\n    setPageNodes(nodes.slice(start,end));\n    console.log(\"In other useEffect call\");\n    console.log(activePage);\n    console.log(start);\n    console.log(end);\n    console.log(nodesPerPage);\n    console.log(nodes);\n    console.log(pageNodes);\n  }, [activePage, nodes]);\n\n  const handlePageClick = data => {\n    setActivePage(data.selected);\n  }\n\n  //const getPageNodes = () => {\n  //  const start = parseInt(activePage)*nodesPerPage;\n  //  const end = parseInt(start)+ nodesPerPage;\n  //  return props.nodes.slice(start,end);\n  //}\n\n\n\n  var loadingDiv;\n\n  if(!props.loaded){\n    loadingDiv = <div class=\"mri-directory-loading\"><img src={props.settings.clientPathToApp + \"public/images/spinner.gif\"} /></div>\n  }\n\n  console.log(\"Before return\");\n  console.log(activePage);\n  console.log(nodesPerPage);\n  console.log(nodes);\n  console.log(pageNodes);\n\n\n  return (\n\n    <div>{nodesPerPage}\n    {props.loaded ?\n      <div className=\"nodeList\">\n        <div className=\"node-count\">{nodes.length} results found</div>\n        {pageNodes.map((node) =>  <Node nodeData={node} settings={props.settings}/>)}\n      </div> : loadingDiv }\n\n     <div className=\"react-paginate\">\n        <ReactPaginate\n          previousLabel={'prev'}\n          nextLabel={'next'}\n          breakLabel={'...'}\n          breakClassName={'break-me'}\n          pageCount={nodes.length/nodesPerPage}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={nodesPerPage}\n          onPageChange={handlePageClick}\n          containerClassName={'pagination'}\n          subContainerClassName={'pages pagination'}\n          pageClassName={'page-link-li'}\n          activeClassName={'active'}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Directory\n","const MapPopup = ({node}) => {\n  return (\n  <div>\n    {node.image &&\n      <img\n        src={node.image[0].url}\n        alt=\"Node logo\"\n        maxWidth={\"50%\"}\n        height={8}\n      />\n    }\n    <div>\n        {\n          node.url || node.urls ?\n            <a href={node.url || node.urls[0].url}  target=\"_blank\" rel=\"noopener noreferrer\">\n              <span wordBreak=\"break-all\">{node.name}</span>\n            </a>\n              :\n            <span wordBreak=\"break-all\">{node.name}</span>\n        }\n    </div>\n    {node.description &&\n      <div>\n          {node.description.length > 250 ? `${node.description.slice(0,250)}...`: node.description}\n      </div>\n    }\n  </div>\n  )\n}\n\nexport default MapPopup\n","import { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet'\nimport L from 'leaflet';\nimport MapPopup from './MapPopup.js'\n\nimport 'leaflet/dist/leaflet.css'\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nconst Map = ({nodes, settings, loaded}) => {\n\n  L.Icon.Default.mergeOptions({\n    iconRetinaUrl: settings.clientPathToApp+'public/images/marker-icon-2x.png',\n    iconUrl: settings.clientPathToApp+'public/images/marker-icon.png',\n    shadowUrl: settings.clientPathToApp+'public/images/marker-shadow.png'\n  });\n\n  var loadingDiv;\n\n  if(!loaded){\n    loadingDiv = <div class=\"mri-map-loading\"><img src={settings.clientPathToApp + \"public/images/spinner.gif\"} /></div>\n  }\n\n  return (\n    <div class=\"mri-map-outer-container\">\n    {loadingDiv}\n    <MapContainer center={settings.mapCenter} zoom={settings.mapZoom} scrollWheelZoom={settings.mapAllowScrollZoom} style={{height: \"70vh\", width: \"100%\", margin: \"auto\"}}>\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {nodes.map((node) => {\n        if (node.data) {\n          const id = node.id;\n          node = node.data;\n          node.id = id;\n        }\n        return(\n          <div key={`${node.id || node.objectID}`}>\n            {node.geolocation ?\n            (<Marker position={[parseFloat(node.geolocation.lat), parseFloat(node.geolocation.lon)]}>\n            <Popup>\n              <MapPopup node={node} />\n            </Popup>\n          </Marker>):\n          null}\n\n          </div>\n          )\n      })}\n    </MapContainer>\n    </div>\n  )\n}\n\nexport default Map\n","import React from 'react';\nimport Form from \"@rjsf/core\";\nimport Directory from './Directory.js';\nimport Map from './Map.js';\n\nclass MurmurationsInterface extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.fetchNodes = this.fetchNodes.bind(this);\n    this.handleFilterSubmit = this.handleFilterSubmit.bind(this);\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleErrors = this.handleErrors.bind(this);\n    this.state = {\n      nodes: [],\n      filterFormData : props.settings.formData\n    };\n\n  }\n\n  fetchNodes(filters){\n    var api_url = this.props.settings.apiUrl;\n    var api_node_format = this.props.settings.apiNodeFormat;\n\n    this.setState({isLoaded : false, nodes: []});\n\n    var params = new URLSearchParams(filters);\n\n    if( this.props.interfaceComp == 'directory' ){\n      params.set('format', api_node_format);\n    }\n\n    if(this.state.search){\n      params.set('search', this.state.search);\n    }\n\n    fetch(api_url+'?'+params.toString())\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            nodes: result\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n\n\n  }\n\n  handleSearchChange(event) {\n    this.setState({search : event.target.value});\n  }\n\n  handleSearchSubmit(event) {\n    event.preventDefault();\n    this.fetchNodes();\n  }\n\n  handleErrors() {\n    console.log(\"errors\", this)\n  }\n\n  handleFilterSubmit({formData}, e) {\n\n    var filters = \"\";\n\n    this.setState({filterFormData : formData});\n\n    Object.keys(formData).forEach((key,index) => {\n      if(formData[key]){\n        if (formData[key] != \"any\" && formData[key] != \"\"){\n          if('operator' in this.props.settings.filterSchema.properties[key]){\n            var op = this.props.settings.filterSchema.properties[key].operator;\n          }else{\n            var op = 'equals';\n          }\n          filters += \"filters[\"+index+\"][0]=\"+key+'&';\n          filters += \"filters[\"+index+\"][1]=\"+op+\"&\";\n          filters += \"filters[\"+index+\"][2]=\"+formData[key]+\"&\";\n        }\n      }\n    });\n\n    this.fetchNodes(filters);\n\n  }\n\n  componentDidMount() {\n\n    this.fetchNodes();\n\n  }\n\n  render() {\n\n    const schema = this.props.settings.filterSchema;\n\n    const { error, isLoaded, nodes } = this.state;\n\n    var interfaceComponent;\n\n    if (error) {\n      interfaceComponent = <div>Error: {error.message}</div>;\n    } else {\n      if (this.props.interfaceComp == 'directory' ){\n        interfaceComponent = <Directory nodes={nodes} settings={this.props.settings} loaded={isLoaded} />\n      } else if (this.props.interfaceComp == 'map' ){\n        interfaceComponent = <Map nodes={nodes} settings={this.props.settings} loaded={isLoaded} />\n      }\n    }\n\n      return (\n        <div>\n          <div className=\"mri-filter-form\">\n            <Form schema={schema}\n            formData={this.state.filterFormData}\n            onChange={this.handleFilterSubmit}\n            onError={this.handleErrors} />\n          </div>\n          <div className=\"mri-search-form\">\n            <form action=\"/\" onSubmit={this.handleSearchSubmit} >\n              <input type=\"text\" name=\"search\"  onChange={this.handleSearchChange} value={this.state.search} />\n              <button type=\"submit\">Search</button>\n            </form>\n          </div>\n          {interfaceComponent}\n        </div>\n      );\n\n  }\n}\n\nexport default MurmurationsInterface\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MurmurationsInterface from './components/MurmurationsInterface.js';\n\nconst reactDirectory = document.getElementById('murmurations-react-directory');\n\nconst reactMap = document.getElementById('murmurations-react-map');\n\nif (reactDirectory) {\n  const settings = window.wpReactSettings;\n  ReactDOM.render(<MurmurationsInterface settings={settings} interfaceComp=\"directory\"/>, reactDirectory);\n}\n\nif (reactMap) {\n  const settings = window.wpReactSettings;\n  ReactDOM.render(<MurmurationsInterface settings={settings} interfaceComp=\"map\" />, reactMap);\n}\n"],"sourceRoot":""}